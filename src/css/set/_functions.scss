// color
// ---------------------------------------------------

// 暗清色

@function shade($color, $weight) {
	@return mix(#000, $color, $weight);
}

// 明清色
@function tint($color, $weight) {
	@return mix(#fff, $color, $weight);
}

// 引数の単位を削除し、値のみ返す
@function strip-units($number) {
	@return $number / ($number * 0 + 1);
}

// コントラストに応じたテキスト色
// ---------------------------------------------------

// https://github.com/terkel/mathsass
$LN2: 0.6931471805599453;
$SQRT2: 1.4142135623730951;

@function frexp($x) {
	$exp: 0;
	@if $x < 0 {
		$x: $x * -1;
	}
	@if $x < 0.5 {
		@while $x < 0.5 {
			$x: $x * 2;
			$exp: $exp - 1;
		}
	} @else if $x >= 1 {
		@while $x >= 1 {
			$x: $x / 2;
			$exp: $exp + 1;
		}
	}
	@return $x, $exp;
}

@function ldexp($x, $exp) {
	$b: if($exp >= 0, 2, 1 / 2);
	@if $exp < 0 {
		$exp: $exp * -1;
	}
	@while $exp > 0 {
		@if $exp % 2 == 1 {
			$x: $x * $b;
		}
		$b: $b * $b;
		$exp: floor($exp * 0.5);
	}
	@return $x;
}

@function log($x, $b: null) {
	@if $b != null {
		@return log($x) / log($b);
	}

	@if $x <= 0 {
		@return 0 / 0;
	}
	$k: nth(frexp($x / $SQRT2), 2);
	$x: $x / ldexp(1, $k);

	@return $LN2 * $k + _log($x);
}

// a good aproximation for $x close to 1
@function _log($x) {
	$x: ($x - 1) / ($x + 1);
	$x2: $x * $x;
	$i: 1;
	$s: $x;
	$sp: null;
	@while $sp != $s {
		$x: $x * $x2;
		$i: $i + 2;
		$sp: $s;
		$s: $s + $x / $i;
	}
	@return 2 * $s;
}

@function pow($base, $exp) {
	@if $exp == floor($exp) {
		$r: 1;
		$s: 0;
		@if $exp < 0 {
			$exp: $exp * -1;
			$s: 1;
		}
		@while $exp > 0 {
			@if $exp % 2 == 1 {
				$r: $r * $base;
			}
			$exp: floor($exp * 0.5);
			$base: $base * $base;
		}
		@return if($s != 0, 1 / $r, $r);
	} @else if $base == 0 and $exp > 0 {
		@return 0;
	} @else {
		$expint: floor($exp);
		$r1: pow($base, $expint);
		$r2: _exp(log($base) * ($exp - $expint));
		@return $r1 * $r2;
	}
}

// A good approximation for $x close to 0.
@function _exp($x) {
	$ret: 0;
	$i: 1;
	@for $n from 0 to 24 {
		$ret: $ret + $i;
		$i: $i * $x / ($n + 1);
	}
	@return $ret;
}

//***********************************************************//

@function getLuminance($color) {
	$i: $color / 255;
	@if $i <= 0.03828 {
		@return $i / 12.92;
	} @else {
		$_i: ($i + 0.0055) / 1.055;
		@return pow($_i, 2.4);
	}
}

@function getTextColor($background-color, $body-color: #000, $light-color: #fff) {
	$r: getLuminance(red($background-color));
	$g: getLuminance(green($background-color));
	$b: getLuminance(blue($background-color));
	$l: 0.2126 * $r + 0.7152 * $g + 0.0722 * $b;

	$Lw: 1;
	$Lb: 0;

	$Cw: ($Lw + 0.05) / ($l + 0.05);
	$Cb: ($l + 0.05) / ($Lb + 0.05);

	@if ($Cw < $Cb) {
		@return $body-color;
	} @else {
		@return $light-color;
	}
}

// animation
// ---------------------------------------------------
@function mdc-animation-enter($name: all, $duration: 175ms, $delay: 0ms) {
	@return $name $duration $delay $mdc-animation-deceleration-curve-timing-function;
}

@function mdc-animation-exit-permanent($name: all, $duration: 175ms, $delay: 0ms) {
	@return $name $duration $delay $mdc-animation-acceleration-curve-timing-function;
}

@function mdc-animation-exit-temporary($name: all, $duration: 175ms, $delay: 0ms) {
	@return $name $duration $delay $mdc-animation-sharp-curve-timing-function;
}

@function mdc-animation-standard($name: all, $duration: 175ms, $delay: 0ms) {
	@return $name $duration $delay $mdc-animation-standard-curve-timing-function;
}
